FROM node:20-slim AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies (skip prepare script for production)
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

# Install NestJS CLI for building
RUN npm install -g @nestjs/cli

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-slim AS production

WORKDIR /app

# Create non-root user
RUN groupadd -g 1001 nodejs
RUN useradd -r -u 1001 -g nodejs nestjs

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./

# Install only production dependencies (skip prepare script for production)
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

# Create crypto polyfill script
RUN echo 'const crypto = require("crypto"); global.crypto = crypto; require("./dist/main.js");' > start.js

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Copy mail templates (needed at runtime)
COPY --from=builder /app/src/mail/mail-templates ./src/mail/mail-templates

# Create necessary directories and set permissions
RUN mkdir -p src/mail/mail-templates && chown -R nestjs:nodejs src

# Install wait-for-it script (used by startup checks)
RUN curl -fsSL https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -o /usr/local/bin/wait-for-it \
  && chmod +x /usr/local/bin/wait-for-it \
  && ln -s /usr/local/bin/wait-for-it ./wait-for-it.sh

# Create uploads directory
RUN mkdir -p uploads && chown -R nestjs:nodejs uploads

# Switch to non-root user
USER nestjs

# Expose port
EXPOSE 3000

# Health check (respect API prefix)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -sf http://localhost:3000/api/v1/health || exit 1

# Start the application with crypto polyfill
CMD ["node", "start.js"]
